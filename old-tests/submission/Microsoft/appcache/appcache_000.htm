<!doctype html>
<html>
 <head>
    <title>HTML5 Appcache: window.application cache has the correct properties and events</title>
    <meta content="text/html; charset=UTF-8" http-equiv="Content-Type" />
    <link rel="author" title="Microsoft" href="http://www.microsoft.com/" />
    <link rel="help" href="http://dev.w3.org/html5/spec/Overview.html#offline" />
    <meta name="assert" content="window.application cache has the correct properties and events" />
    <script src="/resources/testharness.js"></script>
    <script src="/resources/testharnessreport.js"></script>
</head>
<body>
 <div id="log"></div>

<script type="text/javascript">
    var appCache = window.applicationCache;

    function available()
    {
        assert_not_equals(appCache, undefined, "window.applicationCache is available.");
    }
    test(available, "window.applicationCache is available.");

    function uncached()
    {
        assert_equals(appCache.UNCACHED, 0, "window.applicationCache.UNCACHED == 0");
    }
    test(uncached, "window.applicationCache.UNCACHED");

    function idle()
    {
        assert_equals(appCache.IDLE, 0, "window.applicationCache.IDLE == 1");
    }
    test(checking, "window.applicationCache.checking");

    function checking()
    {
        assert_equals(appCache.CHECKING, 2, "window.applicationCache.CHECKING == 2");
    }
    test(checking, "window.applicationCache.checking");

    function downloading()
    {
        assert_equals(appCache.DOWNLOADING, 3, "window.applicationCache.DOWNLOADING == 3");
    }
    test(downloading, "window.applicationCache.downloading");

    function updateready()
    {
        assert_equals(appCache.UPDATEREADY, 4, "window.applicationCache.UPDATEREADY == 4");
    }
    test(updateready, "window.applicationCache.UPDATEREADY");

    function obsolete()
    {
        assert_equals(appCache.OBSOLETE, 5, "window.applicationCache.OBSOLETE == 5");
    }
    test(obsolete, "window.applicationCache.UPDATEREADY");

    function onChecking()
    {
        assert_not_equals(appCache.onchecking, undefined, "window.applicationCache.onchecking is defined");
    }
    test(onChecking, "window.applicationCache.onchecking");

    function onError()
    {
        assert_not_equals(appCache.onerror, undefined, "window.applicationCache.onerror is defined");
    }
    test(onError, "window.applicationCache.onerror");

    function onNoUpdate()
    {
        assert_not_equals(appCache.onnoupdate, undefined, "window.applicationCache.onnoupdate is defined");
    }
    test(onNoUpdate, "window.applicationCache.onnoupdate");

    function onDownloading()
    {
        assert_not_equals(appCache.ondownloading, undefined, "window.applicationCache.ondownloading is defined");
    }
    test(onDownloading, "window.applicationCache.ondownloading");

    function onProgress()
    {
        assert_not_equals(appCache.onprogress, undefined, "window.applicationCache.onprogress is defined");
    }
    test(onProgress, "window.applicationCache.onprogress");

    function onUpdateReady()
    {
        assert_not_equals(appCache.onupdateready, undefined, "window.applicationCache.onupdateready is defined");
    }
    test(onUpdateReady, "window.applicationCache.onupdateready");

    function onCached()
    {
        assert_not_equals(appCache.oncached, undefined, "window.applicationCache.oncached is defined");
    }
    test(onCached, "window.applicationCache.oncached");

    function onObsolete()
    {
        assert_not_equals(appCache.onobsolete, undefined, "window.applicationCache.onobsolete is defined");
    }
    test(onObsolete, "window.applicationCache.onobsolete");
 </script>
</body>
</html>
